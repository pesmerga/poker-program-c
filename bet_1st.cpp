// Library implementation of bet_1st.cpp#include "bet_1st.h"// bet_1st is a function that the computer uses when prompted to// enter an action to play (call, bet, fold, etc.) during a given// round. It takes a table and a ranking value determined by// a ranking function according to the poker book used and makes// an algorithimic decision based upon it.char bet_1st(table &mytable){	float random;	random = (float(rand()) / float(RAND_MAX));	ranking(mytable.player[(mytable.currentplayer)]);		if (mytable.betsinround == 1)	{		if (mytable.pot == (mytable.bet_level * 1.5))		{			switch (mytable.player[(mytable.currentplayer)].position)			{				case 9 :				case 8 :					if (mytable.player[(mytable.currentplayer)].rank.value <= 7)	// Raise with rank 7 or better					{						if (random < (.95 +							(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))						{							mytable.player[(mytable.currentplayer)].action = 'b';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}					}					if (mytable.player[(mytable.currentplayer)].rank.value == 8)	// Raise 1/3 the time, call 1/3 the time, and fold 1/3 the time with rank 8					{						if (random < ((1 / 3) +							(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))						{							mytable.player[(mytable.currentplayer)].action = 'b';							return mytable.player[(mytable.currentplayer)].action;						}						if (random < ((2 / 3) +							(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'f';							return mytable.player[(mytable.currentplayer)].action;						}					}					else					{						if (random < (.05 +							(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'f';							return mytable.player[(mytable.currentplayer)].action;						}					}					break;				case 7 :				case 6 :				case 5 :					if ((mytable.player[(mytable.currentplayer)].rank.value <= 3) ||						(mytable.player[(mytable.currentplayer)].special == 4))	// Raise with rank 3 or better or case 4 (AJ, KQ)					{						if (random < (.95 +							(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))						{							mytable.player[(mytable.currentplayer)].action = 'b';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}					}					if ((mytable.player[(mytable.currentplayer)].rank.value >= 6) &&						(mytable.player[(mytable.currentplayer)].rank.kind == 1))	// Fold with a small pair					{						if (random < (.05 +							(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'f';							return mytable.player[(mytable.currentplayer)].action;						}					}					if (mytable.player[(mytable.currentplayer)].rank.value == 4) // Raise 1/5 the time with hand of rank 4					{						if (random < ((1 / 5) +							(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))						{							mytable.player[(mytable.currentplayer)].action = 'b';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}					}					if (mytable.player[(mytable.currentplayer)].rank.value <= 6)	// Play with a rank 6 or better					{						if (random < (.95 +							(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'f';							return mytable.player[(mytable.currentplayer)].action;						}					}					else					{						if (random < (.05 +							(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'f';							return mytable.player[(mytable.currentplayer)].action;						}					}					break;				case 4 :				case 3 :				case 2 :					if (mytable.player[(mytable.currentplayer)].special == 1)	// Raise with case 1 (AA, KK, QQ, AK, AQ)					{						if (random < (.95 +							(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))						{							mytable.player[(mytable.currentplayer)].action = 'b';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}					}					if (mytable.player[(mytable.currentplayer)].special == 2)	// Raise 2/3 the time with case 2 (AKs, AQs, AJs, KQs)					{						if (random < ((2 / 3) +							(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))						{							mytable.player[(mytable.currentplayer)].action = 'b';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}					}					if (mytable.player[(mytable.currentplayer)].rank.value <= 4) // Raise 1/3 the time with rank of 4 or better					{						if (random < ((1 / 3) +							(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))						{							mytable.player[(mytable.currentplayer)].action = 'b';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}					}					if (mytable.player[(mytable.currentplayer)].rank.value == 5) // Raise 1/10 the time and call 1/10 the time with rank of 5					{						if (random < ((1 / 10) +							(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))						{							mytable.player[(mytable.currentplayer)].action = 'b';							return mytable.player[(mytable.currentplayer)].action;						}						if (random < ((2 / 10) +							(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'f';							return mytable.player[(mytable.currentplayer)].action;						}										}					else					{						if (random < (.05 +							(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'f';							return mytable.player[(mytable.currentplayer)].action;						}					}					break;				case 1 :				case 0 :										if (mytable.player[(mytable.currentplayer)].rank.value <= 3)	// Rank 3 or better					{						if (random < (.95 +							(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))						{							mytable.player[(mytable.currentplayer)].action = 'b';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}					}					if (mytable.player[(mytable.currentplayer)].rank.value <= 8)	// Rank 8 or better					{						if (random < (.7 +							(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'f';							return mytable.player[(mytable.currentplayer)].action;						}					}					else					{						if (random < (.05 +							(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'f';							return mytable.player[(mytable.currentplayer)].action;						}					}					break;			}		}		else		{			switch (mytable.player[(mytable.currentplayer)].position)			{				case 9 :					if ((mytable.player[(mytable.currentplayer)].rank.kind == 1) &&						(mytable.player[(mytable.currentplayer)].rank.value >= 5) &&						(mytable.pot >= (mytable.bet_level * 5.5)))					{						if (random < (.95 +							(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))						{							mytable.player[(mytable.currentplayer)].action = 'b';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}					}				case 8 :					if (mytable.pot <= (mytable.bet_level * 3.5))					{						if (mytable.player[(mytable.currentplayer)].rank.value <= 3)	// With few callers, raise with rank 3 or better.						{							if (random < (.95 +								(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))							{								mytable.player[(mytable.currentplayer)].action = 'b';								return mytable.player[(mytable.currentplayer)].action;							}							else							{								mytable.player[(mytable.currentplayer)].action = 'c';								return mytable.player[(mytable.currentplayer)].action;							}						}						if (mytable.player[(mytable.currentplayer)].rank.value == 4)	// Raise 1/3 the time with rank 4 with few callers.						{							if (random < ((1 / 3) +								(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))							{								mytable.player[(mytable.currentplayer)].action = 'b';								return mytable.player[(mytable.currentplayer)].action;							}							else							{								mytable.player[(mytable.currentplayer)].action = 'c';								return mytable.player[(mytable.currentplayer)].action;							}						}						if (mytable.player[(mytable.currentplayer)].rank.value <= 6)	// Call  with rank 6 or better						{							if (random < (.95 +								(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))							{								mytable.player[(mytable.currentplayer)].action = 'c';								return mytable.player[(mytable.currentplayer)].action;							}							else							{								mytable.player[(mytable.currentplayer)].action = 'f';								return mytable.player[(mytable.currentplayer)].action;							}						}						if (mytable.player[(mytable.currentplayer)].rank.value == 7)	// Play 1/3 the time with rank 7						{							if (random < ((1 / 3) +								(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))							{								mytable.player[(mytable.currentplayer)].action = 'c';								return mytable.player[(mytable.currentplayer)].action;							}							else							{								mytable.player[(mytable.currentplayer)].action = 'f';								return mytable.player[(mytable.currentplayer)].action;							}						}						else						{							if (random < (.05 +								(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))							{								mytable.player[(mytable.currentplayer)].action = 'c';								return mytable.player[(mytable.currentplayer)].action;							}							else							{								mytable.player[(mytable.currentplayer)].action = 'f';								return mytable.player[(mytable.currentplayer)].action;							}						}					}					else					{						if (mytable.player[(mytable.currentplayer)].rank.value <= 3)	// Raise with rank 3						{							if (random < (.95 +								(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))							{								mytable.player[(mytable.currentplayer)].action = 'b';								return mytable.player[(mytable.currentplayer)].action;							}							else							{								mytable.player[(mytable.currentplayer)].action = 'c';								return mytable.player[(mytable.currentplayer)].action;							}						}						if (mytable.player[(mytable.currentplayer)].rank.value <= 7)	// Call with rank 5 or better						{							if (random < (.95 +								(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))							{								mytable.player[(mytable.currentplayer)].action = 'c';								return mytable.player[(mytable.currentplayer)].action;							}							else							{								mytable.player[(mytable.currentplayer)].action = 'f';								return mytable.player[(mytable.currentplayer)].action;							}						}						if (mytable.player[(mytable.currentplayer)].rank.value == 8)	// Play 1/2 the time with rank 6						{							if (random < ((1 / 2) +								(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))							{								mytable.player[(mytable.currentplayer)].action = 'c';								return mytable.player[(mytable.currentplayer)].action;							}							else							{								mytable.player[(mytable.currentplayer)].action = 'f';								return mytable.player[(mytable.currentplayer)].action;							}						}						else						{							if (random < (.05 +								(.05 * mytable.player[(mytable.currentplayer)].personality.passive)))							{								mytable.player[(mytable.currentplayer)].action = 'c';								return mytable.player[(mytable.currentplayer)].action;							}							else							{								mytable.player[(mytable.currentplayer)].action = 'f';								return mytable.player[(mytable.currentplayer)].action;							}						}					}					break;				case 7 :				case 6 :				case 5 :					if (mytable.player[(mytable.currentplayer)].rank.value <= 2) // Raise with a rank 2 or better					{						if (random < (.95 +							(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))						{							mytable.player[(mytable.currentplayer)].action = 'b';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}					}					if (mytable.player[(mytable.currentplayer)].rank.value == 3) // Raise 1/4 the time with rank 3					{						if (random < ((1 / 4) +							(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))						{							mytable.player[(mytable.currentplayer)].action = 'b';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}					}					if (mytable.player[(mytable.currentplayer)].rank.value <= 6) // Play with a rank 6 or better					{						if (random < (.95 +							(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'f';							return mytable.player[(mytable.currentplayer)].action;						}					}					else					{						if (random < (.05 +							(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'f';							return mytable.player[(mytable.currentplayer)].action;						}					}					break;				case 4 :				case 3 :				case 2 :					if (mytable.player[(mytable.currentplayer)].rank.value <= 2) // Raise with rank 2 or better					{						if (random < (.95 +							(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))						{							mytable.player[(mytable.currentplayer)].action = 'b';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}					}					if (mytable.player[(mytable.currentplayer)].rank.value == 3) // Raise 1/2 the time with rank 3					{						if (random < ((1 / 2) +							(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))						{							mytable.player[(mytable.currentplayer)].action = 'b';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}					}					if (mytable.player[(mytable.currentplayer)].rank.value == 4) // Play a rank 4					{						if (random < (.95 +							(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'f';							return mytable.player[(mytable.currentplayer)].action;						}					}					else					{						if (random < (.15 +							(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'f';							return mytable.player[(mytable.currentplayer)].action;						}					}					break;				case 1 :					if ((mytable.pot <= (mytable.bet_level * 3.5)) &&						(mytable.player[(mytable.currentplayer)].rank.value <= 3) &&						((mytable.player[((mytable.currentplayer + 7) % 10)].action == 'c') ||						 (mytable.player[((mytable.currentplayer + 8) % 10)].action == 'c')))					{						if (random < (.95 +							(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))						{							mytable.player[(mytable.currentplayer)].action = 'b';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}					}					if ((mytable.pot <= (mytable.bet_level * 5.5)) &&						(mytable.player[(mytable.currentplayer)].special == 4))					{						if (random < (.95 +							(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))						{							mytable.player[(mytable.currentplayer)].action = 'b';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}					}					if (mytable.player[(mytable.currentplayer)].rank.value <= 3)					{						if (random < (.95 +							(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))						{							mytable.player[(mytable.currentplayer)].action = 'b';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}					}					if (mytable.player[(mytable.currentplayer)].rank.value <= 7)					{						if (random < (.95 +							(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'f';							return mytable.player[(mytable.currentplayer)].action;						}					}					else					{						if (random < (.95 +							(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'f';							return mytable.player[(mytable.currentplayer)].action;						}					}					break;				case 0 :					if (mytable.pot >= (mytable.bet_level * 4.5))					{						if (mytable.player[(mytable.currentplayer)].rank.value <= 2)						{							if (random < (.95 +								(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))							{								mytable.player[(mytable.currentplayer)].action = 'b';								return mytable.player[(mytable.currentplayer)].action;							}							else							{								mytable.player[(mytable.currentplayer)].action = 'c';								return mytable.player[(mytable.currentplayer)].action;							}						}						if (mytable.player[(mytable.currentplayer)].rank.value <= 7)						{							if (random < (.95 +								(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))							{								mytable.player[(mytable.currentplayer)].action = 'c';								return mytable.player[(mytable.currentplayer)].action;							}							else							{								mytable.player[(mytable.currentplayer)].action = 'f';								return mytable.player[(mytable.currentplayer)].action;							}						}						else						{							if (random < (.55 +								(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))							{								mytable.player[(mytable.currentplayer)].action = 'c';								return mytable.player[(mytable.currentplayer)].action;							}							else							{								mytable.player[(mytable.currentplayer)].action = 'f';								return mytable.player[(mytable.currentplayer)].action;							}						}					}					else					{						if (mytable.player[(mytable.currentplayer)].rank.value <= 4)						{							if (random < (.95 +								(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))							{								mytable.player[(mytable.currentplayer)].action = 'b';								return mytable.player[(mytable.currentplayer)].action;							}							else							{								mytable.player[(mytable.currentplayer)].action = 'c';								return mytable.player[(mytable.currentplayer)].action;							}						}						if (mytable.player[(mytable.currentplayer)].rank.value <= 8)						{							if (random < (.95 +								(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))							{								mytable.player[(mytable.currentplayer)].action = 'c';								return mytable.player[(mytable.currentplayer)].action;							}							else							{								mytable.player[(mytable.currentplayer)].action = 'f';								return mytable.player[(mytable.currentplayer)].action;							}						}						else						{							if (random < (.75 +								(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))							{								mytable.player[(mytable.currentplayer)].action = 'c';								return mytable.player[(mytable.currentplayer)].action;							}							else							{								mytable.player[(mytable.currentplayer)].action = 'f';								return mytable.player[(mytable.currentplayer)].action;							}						}					}					break;			}		}	}	if ((mytable.betsinround == 3) ||		(mytable.betsinround == 2))	{		switch (mytable.player[(mytable.currentplayer)].position)		{			case 9 :			case 8 :				if ((mytable.player[(mytable.currentplayer)].rank.value <= 2) ||					(mytable.player[(mytable.currentplayer)].special == 1))	// Raise with rank 2 or case 1				{					if (random < (.95 +						(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))					{						mytable.player[(mytable.currentplayer)].action = 'b';						return mytable.player[(mytable.currentplayer)].action;					}					else					{						mytable.player[(mytable.currentplayer)].action = 'c';						return mytable.player[(mytable.currentplayer)].action;					}				}				if (mytable.player[(mytable.currentplayer)].rank.value <= 6)	// Call with rank 6 or better				{					if (random < (.95 +						(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))					{						mytable.player[(mytable.currentplayer)].action = 'c';						return mytable.player[(mytable.currentplayer)].action;					}					else					{						mytable.player[(mytable.currentplayer)].action = 'f';						return mytable.player[(mytable.currentplayer)].action;					}				}				else				{					if (random < (.05 +						(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))					{						mytable.player[(mytable.currentplayer)].action = 'c';						return mytable.player[(mytable.currentplayer)].action;					}					else					{						mytable.player[(mytable.currentplayer)].action = 'f';						return mytable.player[(mytable.currentplayer)].action;					}				}				break;			case 7 :			case 6 :			case 5 :				if ((mytable.player[(mytable.currentplayer)].special == 1) ||					(mytable.player[(mytable.currentplayer)].rank.value == 1))	// Reraise pot 9/10 with case 1 or rank 1 hand calling 1/10				{					if (random < ((9 / 10) +						(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))					{						mytable.player[(mytable.currentplayer)].action = 'b';						return mytable.player[(mytable.currentplayer)].action;					}					else					{						mytable.player[(mytable.currentplayer)].action = 'c';						return mytable.player[(mytable.currentplayer)].action;					}				}				if (mytable.player[(mytable.currentplayer)].rank.value <= 4)	// Play with rank 4				{					if (random < (.95 +						(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))					{						mytable.player[(mytable.currentplayer)].action = 'c';						return mytable.player[(mytable.currentplayer)].action;					}					else					{						mytable.player[(mytable.currentplayer)].action = 'f';						return mytable.player[(mytable.currentplayer)].action;					}				}				if (mytable.player[(mytable.currentplayer)].rank.value == 5)	// Play 1/2 the time with rank of 5				{					if (random < ((1 / 2) +						(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))					{						mytable.player[(mytable.currentplayer)].action = 'c';						return mytable.player[(mytable.currentplayer)].action;					}					else					{						mytable.player[(mytable.currentplayer)].action = 'f';						return mytable.player[(mytable.currentplayer)].action;					}				}				else				{					if (random < (.05 +						(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))					{						mytable.player[(mytable.currentplayer)].action = 'c';						return mytable.player[(mytable.currentplayer)].action;					}					else					{						mytable.player[(mytable.currentplayer)].action = 'f';						return mytable.player[(mytable.currentplayer)].action;					}				}				break;			case 4 :			case 3 :			case 2 :				if (mytable.betsinround == 2)				{					if ((mytable.pot >= (mytable.bet_level * 5.5)) &&						(mytable.player[(mytable.currentplayer)].rank.value >= 6) &&						(mytable.player[(mytable.currentplayer)].rank.kind == 1))	// With a multiway pot, play a small pair					{						if (random < (.95 +							(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'f';							return mytable.player[(mytable.currentplayer)].action;						}					}					if ((mytable.player[(mytable.lastraiser)].position < mytable.player[(mytable.currentplayer)].position) &&					    (mytable.player[(mytable.currentplayer)].rank.value <= 2))	// The last raiser is to the right, so play rank 2 or better					{						if (random < (.95 +							(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'f';							return mytable.player[(mytable.currentplayer)].action;						}					}					if ((mytable.player[(mytable.lastraiser)].position <= 9) &&						(mytable.player[(mytable.lastraiser)].position >= 7) &&						(mytable.player[(mytable.currentplayer)].rank.value <= 3))	// The last raiser is in late position, reraise with rank 3 or better.					{						if (random < (.95 +							(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))						{							mytable.player[(mytable.currentplayer)].action = 'b';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}					}				}				if (mytable.player[(mytable.currentplayer)].rank.value <= 2)	// With rank 2 or better and not meeting any of the conditions above, raise/reraise.				{					if (random < (.95 +						(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))					{						mytable.player[(mytable.currentplayer)].action = 'b';						return mytable.player[(mytable.currentplayer)].action;					}					else					{						mytable.player[(mytable.currentplayer)].action = 'c';						return mytable.player[(mytable.currentplayer)].action;					}				}				if (mytable.player[(mytable.currentplayer)].rank.value == 3)	// With rank 3 and not meeting any of the above conditions, play.				{					if (random < (.95 +						(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))					{						mytable.player[(mytable.currentplayer)].action = 'c';						return mytable.player[(mytable.currentplayer)].action;					}				}				else				{					if (random < (.05 +						(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))					{						mytable.player[(mytable.currentplayer)].action = 'c';						return mytable.player[(mytable.currentplayer)].action;					}					else					{						mytable.player[(mytable.currentplayer)].action = 'f';						return mytable.player[(mytable.currentplayer)].action;					}				}				break;			case 1 :				if (mytable.pot >= (mytable.bet_level * 4.5))				{					if (((mytable.player[(mytable.lastraiser)].position >= 5) ||						 (mytable.player[(mytable.lastraiser)].position == 0)) &&						((mytable.player[((mytable.currentplayer + 1) % 10)].action == 'c') ||						 (mytable.player[((mytable.currentplayer + 2) % 10)].action == 'c') ||						 (mytable.player[((mytable.currentplayer + 3) % 10)].action == 'c')) && 						((mytable.player[(mytable.currentplayer)].rank.value <= 3) ||						 (mytable.player[(mytable.currentplayer)].special == 5)))					{						if (random < (.95 +							(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'f';							return mytable.player[(mytable.currentplayer)].action;						}					}					if ((mytable.player[(mytable.lastraiser)].position <= 4) &&						((mytable.player[((mytable.currentplayer + 4) % 10)].action == 'c') ||						 (mytable.player[((mytable.currentplayer + 5) % 10)].action == 'c') ||						 (mytable.player[((mytable.currentplayer + 6) % 10)].action == 'c') ||						 (mytable.player[((mytable.currentplayer + 7) % 10)].action == 'c')) && 						((mytable.player[(mytable.currentplayer)].rank.value <= 5) &&						 (mytable.player[(mytable.currentplayer)].special != 6)))					{						if (random < (.95 +							(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'f';							return mytable.player[(mytable.currentplayer)].action;						}					}					if (mytable.player[(mytable.currentplayer)].rank.value == 1)					{						if (random < (.95 +							(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))						{							mytable.player[(mytable.currentplayer)].action = 'b';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}					}					if ((mytable.player[(mytable.currentplayer)].rank.value <= 3) ||						((mytable.player[(mytable.currentplayer)].rank.kind == 1) &&						 (mytable.player[(mytable.currentplayer)].rank.value >= 5)))					{						if (random < (.95 +							(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'f';							return mytable.player[(mytable.currentplayer)].action;						}					}					else					{						if (random < (.95 +							(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'f';							return mytable.player[(mytable.currentplayer)].action;						}					}				}				else				{					if (mytable.player[(mytable.currentplayer)].rank.value <= 2)					{						if (random < (.95 +							(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))						{							mytable.player[(mytable.currentplayer)].action = 'b';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}					}					if (mytable.player[(mytable.currentplayer)].rank.value <= 4)					{						if (random < (.95 +							(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'f';							return mytable.player[(mytable.currentplayer)].action;						}					}					else					{						if (random < (.75 +							(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'f';							return mytable.player[(mytable.currentplayer)].action;						}					}				}				break;			case 0 :				if ((mytable.player[(mytable.lastraiser)].position >= 8) &&					(mytable.betsinround == 2))				{					if (mytable.player[(mytable.currentplayer)].rank.value <= 5)					{						if (random < (.95 +							(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))						{							mytable.player[(mytable.currentplayer)].action = 'b';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}					}					if (mytable.player[(mytable.currentplayer)].rank.value <= 7)					{						if (random < (.95 +							(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'f';							return mytable.player[(mytable.currentplayer)].action;						}					}					else					{						if (random < (.50 +							(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'f';							return mytable.player[(mytable.currentplayer)].action;						}					}				}				else				{					if (mytable.player[(mytable.currentplayer)].rank.value <= 2)					{						if (random < (.95 +							(-.05 * mytable.player[(mytable.currentplayer)].personality.passive)))						{							mytable.player[(mytable.currentplayer)].action = 'b';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}					}					if (mytable.player[(mytable.currentplayer)].rank.value <= 4)					{						if (random < (.95 +							(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'f';							return mytable.player[(mytable.currentplayer)].action;						}					}					else					{						if (random < (.45 +							(.05 * mytable.player[(mytable.currentplayer)].personality.loose)))						{							mytable.player[(mytable.currentplayer)].action = 'c';							return mytable.player[(mytable.currentplayer)].action;						}						else						{							mytable.player[(mytable.currentplayer)].action = 'f';							return mytable.player[(mytable.currentplayer)].action;						}					}				}				break;		}	}	if (mytable.betsinround == 4)	{		switch (mytable.player[(mytable.currentplayer)].position)		{			case 9 :			case 8 :				if (mytable.player[(mytable.currentplayer)].rank.value <= 6)				{					mytable.player[(mytable.currentplayer)].action = 'c';					return mytable.player[(mytable.currentplayer)].action;				}				else				{					mytable.player[(mytable.currentplayer)].action = 'f';					return mytable.player[(mytable.currentplayer)].action;				}				break;			case 7 :			case 6 :			case 5 :				if (mytable.player[(mytable.currentplayer)].rank.value <= 4)	// Play with rank 4				{					mytable.player[(mytable.currentplayer)].action = 'c';					return mytable.player[(mytable.currentplayer)].action;				}				if (mytable.player[(mytable.currentplayer)].rank.value == 5)	// Play 1/2 the time with rank of 5				{					if (random < (1 / 2))					{						mytable.player[(mytable.currentplayer)].action = 'c';						return mytable.player[(mytable.currentplayer)].action;					}					else					{						mytable.player[(mytable.currentplayer)].action = 'f';						return mytable.player[(mytable.currentplayer)].action;					}				}				else				{					mytable.player[(mytable.currentplayer)].action = 'f';					return mytable.player[(mytable.currentplayer)].action;				}				break;			case 4 :			case 3 :			case 2 :				if (mytable.player[(mytable.currentplayer)].rank.value <= 3)	// Play rank 3 or better				{					mytable.player[(mytable.currentplayer)].action = 'c';					return mytable.player[(mytable.currentplayer)].action;				}				else				{					mytable.player[(mytable.currentplayer)].action = 'f';					return mytable.player[(mytable.currentplayer)].action;				}				break;			case 1 :				if (mytable.pot >= (mytable.bet_level * 4.5))				{					if (((mytable.player[(mytable.lastraiser)].position >= 5) ||						 (mytable.player[(mytable.lastraiser)].position == 0)) &&						((mytable.player[((mytable.currentplayer + 1) % 10)].action == 'c') ||						 (mytable.player[((mytable.currentplayer + 2) % 10)].action == 'c') ||						 (mytable.player[((mytable.currentplayer + 3) % 10)].action == 'c')) && 						((mytable.player[(mytable.currentplayer)].rank.value <= 3) ||						 (mytable.player[(mytable.currentplayer)].special == 5)))					{						mytable.player[(mytable.currentplayer)].action = 'c';						return mytable.player[(mytable.currentplayer)].action;					}					if ((mytable.player[(mytable.lastraiser)].position <= 4) &&						((mytable.player[((mytable.currentplayer + 4) % 10)].action == 'c') ||						 (mytable.player[((mytable.currentplayer + 5) % 10)].action == 'c') ||						 (mytable.player[((mytable.currentplayer + 6) % 10)].action == 'c') ||						 (mytable.player[((mytable.currentplayer + 7) % 10)].action == 'c')) && 						((mytable.player[(mytable.currentplayer)].rank.value <= 5) ||						 (mytable.player[(mytable.currentplayer)].special != 6)))					{						mytable.player[(mytable.currentplayer)].action = 'c';						return mytable.player[(mytable.currentplayer)].action;					}					if ((mytable.player[(mytable.currentplayer)].rank.value <= 3) ||						((mytable.player[(mytable.currentplayer)].rank.kind == 1) &&						 (mytable.player[(mytable.currentplayer)].rank.value >= 5)))					{						mytable.player[(mytable.currentplayer)].action = 'c';						return mytable.player[(mytable.currentplayer)].action;					}					else					{						mytable.player[(mytable.currentplayer)].action = 'f';						return mytable.player[(mytable.currentplayer)].action;					}				}				else				{					if (mytable.player[(mytable.currentplayer)].rank.value <= 4)					{						mytable.player[(mytable.currentplayer)].action = 'c';						return mytable.player[(mytable.currentplayer)].action;					}					else					{						mytable.player[(mytable.currentplayer)].action = 'f';						return mytable.player[(mytable.currentplayer)].action;					}				}				break;			case 0 :				if (mytable.player[(mytable.lastraiser)].position >= 8)				{					if (mytable.player[(mytable.currentplayer)].rank.value <= 8)					{						mytable.player[(mytable.currentplayer)].action = 'c';						return mytable.player[(mytable.currentplayer)].action;					}					else					{						mytable.player[(mytable.currentplayer)].action = 'f';						return mytable.player[(mytable.currentplayer)].action;					}				}				else				{					if (mytable.player[(mytable.currentplayer)].rank.value <= 4)					{						mytable.player[(mytable.currentplayer)].action = 'c';						return mytable.player[(mytable.currentplayer)].action;					}					else					{						mytable.player[(mytable.currentplayer)].action = 'f';						return mytable.player[(mytable.currentplayer)].action;					}				}				break;		}	}	return mytable.player[(mytable.currentplayer)].action;}		