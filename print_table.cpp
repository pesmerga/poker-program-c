// Library Implementation of print_table.cpp#include "print_table.h"// print_table is a function that prints out the current condition // of a given "table" structure displaying information like a player's // name, bankroll, current bets on the table, etc.void print_table(table mytable){	cout << setiosflags(ios::right) << setw(41) << "____________________________" << endl;		// Money for players 2, 3, 4	cout << setiosflags(ios::right) << setw(14) << "|" 	<< setw(2) << "$" << setw(5) << mytable.player[2].money 	<< setw(4) << " | $" << setw(5) << mytable.player[3].money	<< setw(4) << " | $" << setw(5) << mytable.player[4].money	<< setw(2) << "|" << endl;		// Names of players 2, 3, 4	cout << setiosflags(ios::right) << setw(14) << "|"	<< setw(8) << mytable.player[2].name << setw(1) << "|"	<< setw(8) << mytable.player[3].name << setw(1) << "|"	<< setw(8) << mytable.player[4].name << setw(1) << "|"	<< endl;		// Cards of players 2, 3, 4	cout << setiosflags(ios::right) << setw(14) << "|";	if ((mytable.player[2].folded == 1) ||		(mytable.human == 2) ||		(mytable.rounds == 4))	{		cout << setw(4) << print_card(mytable.player[2].big) 		<< print_card(mytable.player[2].small) << setw(3) << "|";	}	else	{		cout << setw(6) << "CcCc" << setw(3) << "|";	}		if ((mytable.player[3].folded == 1) ||		(mytable.human == 3) ||		(mytable.rounds == 4))	{		cout << setw(4) << print_card(mytable.player[3].big) 		<< print_card(mytable.player[3].small) << setw(3) << "|";	}	else	{		cout << setw(6) << "CcCc" << setw(3) << "|";	}		if ((mytable.player[4].folded == 1) ||		(mytable.human == 4) ||		(mytable.rounds == 4))	{		cout << setw(4) << print_card(mytable.player[4].big) 		<< print_card(mytable.player[4].small) << setw(3) << "|";	}	else	{		cout << setw(6) << "CcCc" << setw(3) << "|";	}	cout << endl;		cout << setiosflags(ios::right) << setw(41) << "____________________________" << endl;		// Money for players 1 and 5 and Bets for 2, 3, 4	cout << setiosflags(ios::right) << setw(3) << "| $"	<< setw(5) << mytable.player[1].money << setw(5) << " |  /"	<< setw(6);	if (mytable.player[2].betsthisround == .5)	{		cout << "o";	}	else	{		switch (int(mytable.player[2].betsthisround))		{			case 0 : cout << " ";					 break;			case 1 : cout << "O";					 break;			case 2 : 			case 3 : 			case 4 : cout << "OO";					 break;		}	}	cout << setw(2);	if (mytable.dealer == 2)	{		cout << "D";	}	else	{		cout << " ";	}	cout << setw(7);	if (mytable.player[3].betsthisround == .5)	{		cout << "o";	}	else	{		switch (int(mytable.player[3].betsthisround))		{			case 0 : cout << " ";					 break;			case 1 : cout << "O";					 break;			case 2 : 			case 3 : 			case 4 : cout << "OO";					 break;		}	}	cout << setw(2);	if (mytable.dealer == 3)	{		cout << "D";	}	else	{		cout << " ";	}	cout << setw(7);	if (mytable.player[4].betsthisround == .5)	{		cout << "o";	}	else	{		switch (int(mytable.player[4].betsthisround))		{			case 0 : cout << " ";					 break;			case 1 : cout << "O";					 break;			case 2 : 			case 3 : 			case 4 : cout << "OO";					 break;		}	}	cout << setw(2);	if (mytable.dealer == 4)	{		cout << "D";	}	else	{		cout << " ";	}	cout << setw(3) << "\\"	<< setw(5) << "| $" << setw(5) << mytable.player[5].money << setw(2) << "|"	<< endl;	// Names of 1 and 5 and additional bets for 2, 3, 4	cout << setiosflags(ios::right) << setw(1) << "|"	<< setw(8) << mytable.player[1].name << setw(3) << "| /"	<< setw(7);	switch (int(mytable.player[2].betsthisround))	{		case 0 : 		case 1 : 		case 2 : cout << " ";			     break;		case 3 : cout << "O";			     break;		case 4 : cout << "OO";		 	     break;	}	cout << setw(9);	switch (int(mytable.player[3].betsthisround))	{		case 0 : 		case 1 : 		case 2 : cout << " ";				 break;		case 3 : cout << "O";				 break;		case 4 : cout << "OO";			     break;	}	cout << setw(9);	switch (int(mytable.player[4].betsthisround))	{		case 0 : 		case 1 : 		case 2 : cout << " ";			   	 break;		case 3 : cout << "O";				 break;		case 4 : cout << "OO";				 break;	}	cout << setw(8) << "\\ |" 	<< setw(8) << mytable.player[5].name << setw(1) << "|" << endl;		// Cards for 1 and 5 and check for dealers	cout << setiosflags(ios::right) << setw(1) << "|";		if ((mytable.player[1].folded == 1) ||		(mytable.human == 1) ||		(mytable.rounds == 4))	{		cout << setw(4) << print_card(mytable.player[1].big) 		<< print_card(mytable.player[1].small) << setw(4) << "|/" << setw(1);	}	else	{		cout << setw(6) << "CcCc" << setw(4) << "|/" << setw(1);	}		if (mytable.dealer == 1)	{		cout << "D";	}	else	{		cout << " ";	}	cout << setw(31);	if (mytable.dealer == 5)	{		cout << "D";	}	else	{		cout << " ";	}		if ((mytable.player[5].folded == 1) ||		(mytable.human == 5) ||		(mytable.rounds == 4))	{		cout << setw(2) << "\\|" << setw(4) << print_card(mytable.player[5].big) 		<< print_card(mytable.player[5].small) << setw(3) << "|" << endl;	}	else	{		cout << setw(2) << "\\|" << setw(6) << "CcCc" << setw(3) << "|" << endl;	}		// Bets for 1 and 5	cout << setiosflags(ios::right) << setw(10) << "/" 	<< setw(2);	if (mytable.player[1].betsthisround == .5)	{		cout << "o";	}	else	{		switch (int(mytable.player[1].betsthisround))		{			case 0 : cout << " ";					 break;			case 1 : cout << "O";					 break;			case 2 : 			case 3 : 			case 4 : cout << "OO";					 break;		}	}	cout << setw(32);	if (mytable.player[5].betsthisround == .5)	{		cout << "o";	}	else	{		switch (int(mytable.player[5].betsthisround))		{			case 0 : cout << " ";					 break;			case 1 : cout << "O";					 break;			case 2 : 			case 3 : 			case 4 : cout << "OO";				     break;		}	}	cout << setw(1) << "\\" << endl;	// Additional Bets of 1 and 5	cout << setiosflags(ios::right) << setw(10) << "|" << setw(2);	switch (int(mytable.player[1].betsthisround))	{		case 0 :		case 1 :		case 2 : cout << " ";				 break;		case 3 : cout << "O";				 break;		case 4 : cout << "OO";				 break;	}	cout << setw(32);	switch (int(mytable.player[5].betsthisround))	{		case 0 :		case 1 :		case 2 : cout << " ";				 break;		case 3 : cout << "O";				 break;		case 4 : cout << "OO";				 break;	}	cout << setw(1) << "|" << endl;		cout << setiosflags(ios::right) << setw(10) << "|"	<< setw(35) << "|"	<< endl;		cout << setiosflags(ios::right) << setw(10) << "|" 	<< setw(35) << "|"	<< endl;		// The pot and community cards	cout << setiosflags(ios::right) << setw(10) << "|"	<< setw(5) << "$" << setw(4) << mytable.pot << setw(2) << " ";	switch (mytable.rounds)	{		case 4 :		case 3 : cout << print_card(mytable.community[0]) << setw(2) << " "				 << print_card(mytable.community[1]) << setw(2) << " "				 << print_card(mytable.community[2]) << setw(2) << " "				 << print_card(mytable.community[3]) << setw(2)	<< " "			 				 << print_card(mytable.community[4]);				 				 break;		case 2 : cout << print_card(mytable.community[0]) << setw(2) << " "				 << print_card(mytable.community[1]) << setw(2) << " "				 << print_card(mytable.community[2]) << setw(2)	<< " "			 				 << print_card(mytable.community[3]) << setw(4) << " ";				 				 break;				case 1 : cout << print_card(mytable.community[0]) << setw(2)				 << " " << print_card(mytable.community[1]) << setw(2)				 << " " << print_card(mytable.community[2]) << setw(8) << " ";				 break;		case 0 : cout << setw(18) << " ";				 break;	}	cout << setw(6) << "|" << endl;		cout << setiosflags(ios::right) << setw(10) << "|" 	<< setw(35) << "|"	<< endl;		cout << setiosflags(ios::right) << setw(10) << "|" 	<< setw(35) << "|"	<< endl;		// Additional Bets for 0 and 6	cout << setiosflags(ios::right) << setw(10) << "|" << setw(2);	switch (int(mytable.player[0].betsthisround))	{		case 0 :		case 1 :		case 2 : cout << " ";				 break;		case 3 : cout << "O";				 break;		case 4 : cout << "OO";				 break;	}	cout << setw(32);	switch (int(mytable.player[6].betsthisround))	{		case 0 :		case 1 :		case 2 : cout << " ";				 break;		case 3 : cout << "O";				 break;		case 4 : cout << "OO";				 break;	}	cout << setw(1) << "|" << endl;		// Bets for 0 and 6	cout << setw(10) << "\\" << setw(2);	if (mytable.player[0].betsthisround == .5)	{		cout << "o";	}	else	{		switch (int(mytable.player[0].betsthisround))		{			case 0 : cout << " ";					 break;			case 1 : cout << "O";					 break;			case 2 :			case 3 :			case 4 : cout << "OO";					 break;		}	}	cout << setw(32);	if (mytable.player[6].betsthisround == .5)	{		cout << "o";	}	else	{		switch (int(mytable.player[6].betsthisround))		{			case 0 : cout << " ";					 break;			case 1 : cout << "O";					 break;			case 2 :			case 3 :			case 4 : cout << "OO";					 break;		}	}	cout << setw(1) << "/" << endl;			// Cards for 0 and 6 and check for dealers	cout << setiosflags(ios::right) << setw(1) << "|";		if ((mytable.player[0].folded == 1) ||		(mytable.human == 0) ||		(mytable.rounds == 4))	{		cout << setw(4) << print_card(mytable.player[0].big) 		<< print_card(mytable.player[0].small) << setw(4) << "|\\" << setw(1);	}	else	{		cout << setw(6) << "CcCc" << setw(4) << "|\\" << setw(1);	}		if (mytable.dealer == 0)	{		cout << "D";	}	else	{		cout << " ";	}	cout << setw(31);	if (mytable.dealer == 6)	{		cout << "D";	}	else	{		cout << " ";	}		if ((mytable.player[6].folded == 1) ||		(mytable.human == 6) ||		(mytable.rounds == 4))	{		cout << setw(2) << "/|" << setw(4) << print_card(mytable.player[6].big)		<< print_card(mytable.player[6].small) << setw(3) << "|" << endl;	}	else	{		cout << setw(2) << "/|" << setw(6) << "CcCc" << setw(3) << "|" << endl;	}		// Names of 0 and 6 and additional bets for 7, 8, 9	cout << setiosflags(ios::right) << setw(1) << "|"	<< setw(8) << mytable.player[0].name << setw(3) << "| \\"	<< setw(7);	switch (int(mytable.player[9].betsthisround))	{		case 0 : 		case 1 : 		case 2 : cout << " ";			     break;		case 3 : cout << "O";			     break;		case 4 : cout << "OO";		 	     break;	}	cout << setw(9);	switch (int(mytable.player[8].betsthisround))	{		case 0 : 		case 1 : 		case 2 : cout << " ";				 break;		case 3 : cout << "O";				 break;		case 4 : cout << "OO";			     break;	}	cout << setw(9);	switch (int(mytable.player[7].betsthisround))	{		case 0 : 		case 1 : 		case 2 : cout << " ";			   	 break;		case 3 : cout << "O";				 break;		case 4 : cout << "OO";				 break;	}	cout << setw(8) << "/ |" 	<< setw(8) << mytable.player[6].name << setw(1) << "|" << endl;			// Money for players 0 and 6 and Bets for 7, 8, 9	cout << setiosflags(ios::right) << setw(3) << "| $"	<< setw(5) << mytable.player[0].money << setw(5) << " |  \\"	<< setw(6);	if (mytable.player[9].betsthisround == .5)	{		cout << "o";	}	else	{		switch (int(mytable.player[9].betsthisround))		{			case 0 : cout << " ";					 break;			case 1 : cout << "O";					 break;			case 2 : 			case 3 : 			case 4 : cout << "OO";					 break;		}	}	cout << setw(2);	if (mytable.dealer == 9)	{		cout << "D";	}	else	{		cout << " ";	}	cout << setw(7);	if (mytable.player[8].betsthisround == .5)	{		cout << "o";	}	else	{		switch (int(mytable.player[8].betsthisround))		{			case 0 : cout << " ";					 break;			case 1 : cout << "O";					 break;			case 2 : 			case 3 : 			case 4 : cout << "OO";					 break;		}	}	cout << setw(2);	if (mytable.dealer == 8)	{		cout << "D";	}	else	{		cout << " ";	}	cout << setw(7);	if (mytable.player[7].betsthisround == .5)	{		cout << "o";	}	else	{		switch (int(mytable.player[7].betsthisround))		{			case 0 : cout << " ";					 break;			case 1 : cout << "O";					 break;			case 2 : 			case 3 : 			case 4 : cout << "OO";					 break;		}	}	cout << setw(2);	if (mytable.dealer == 7)	{		cout << "D";	}	else	{		cout << " ";	}	cout << setw(3) << "/"	<< setw(5) << "| $" << setw(5) << mytable.player[6].money << setw(2) << "|"	<< endl;			cout << setiosflags(ios::right) << setw(41) << "----------------------------" << endl;		// Cards of players 7, 8, 9	cout << setiosflags(ios::right) << setw(14) << "|";		if ((mytable.player[9].folded == 1) ||		(mytable.human == 9) ||		(mytable.rounds == 4))	{		cout << setw(4) << print_card(mytable.player[9].big) 		<< print_card(mytable.player[9].small) << setw(3) << "|";	}	else	{		cout << setw(6) << "CcCc" << setw(3) << "|";	}		if ((mytable.player[8].folded == 1) ||		(mytable.human == 8) ||		(mytable.rounds == 4))	{		cout << setw(4) << print_card(mytable.player[8].big) 		<< print_card(mytable.player[8].small) << setw(3) << "|";	}	else	{		cout << setw(6) << "CcCc" << setw(3) << "|";	}		if ((mytable.player[7].folded == 1) ||		(mytable.human == 7) ||		(mytable.rounds == 4))	{		cout << setw(4) << print_card(mytable.player[7].big) 		<< print_card(mytable.player[7].small) << setw(3) << "|";	}	else	{		cout << setw(6) << "CcCc" << setw(3) << "|";	}	cout << endl;		// Names of players 7, 8, 9	cout << setiosflags(ios::right) << setw(14) << "|"	<< setw(8) << mytable.player[9].name << setw(1) << "|"	<< setw(8) << mytable.player[8].name << setw(1) << "|"	<< setw(8) << mytable.player[7].name << setw(1) << "|"	<< endl;			// Money for players 2, 3, 4	cout << setiosflags(ios::right) << setw(14) << "|" 	<< setw(2) << "$" << setw(5) << mytable.player[9].money 	<< setw(4) << " | $" << setw(5) << mytable.player[8].money	<< setw(4) << " | $" << setw(5) << mytable.player[7].money	<< setw(2) << "|" << endl;			cout << setiosflags(ios::right) << setw(41) << "----------------------------" << endl;}// print_card is a sub-routine used by print_table that takes the // value and suit of a card and prints or displays the translated // or actual value or suit of that card. It also displays a pair of // "X"'s for the player's hand to represent a player that had folded // using a capital "X" to represent the value and a lower case "x" // for the suit.apstring print_card(card mycard){	apstring actual_card;	switch(mycard.value)	{		case -1: actual_card = "X";			 	  break;		case 0 : actual_card = "2";				  break;		case 1 : actual_card = "3";				  break;		case 2 : actual_card = "4";				  break;		case 3 : actual_card = "5";						  				  break;		case 4 : actual_card = "6";				  break;		case 5 : actual_card = "7";				  break;		case 6 : actual_card = "8";				  break;		case 7 : actual_card = "9";				  break;		case 8 : actual_card = "T";				  break;		case 9 : actual_card = "J";				  break;		case 10 : actual_card = "Q";				   break;		case 11 : actual_card = "K";				   break;		case 12 : actual_card = "A";				   break;			}	switch(mycard.suit)	{		case -1: actual_card = (actual_card + "x");				  break;		case 0 : actual_card = (actual_card + "c");				  break;		case 1 : actual_card = (actual_card + "d");				  break;		case 2 : actual_card = (actual_card + "h");				  break;		case 3 : actual_card = (actual_card + "s");				  break;	}			return actual_card;}