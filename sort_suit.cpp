// library implementation of sort_suit.cpp#include "sort_suit.h"// sort is a function that takes a player's hand and places it in sequential // order with the largest value card being displayed as the left card and // the smaller of the two being displayed as the right card. If these two // values are equal in value, their position according to how they are displayed// does not change and they appear in the spot in which it was randomly chosen.// In otherwords, it sorts only according to the value of the card.hand sort(hand &myhand){	card tempc; 		// Temporary card used as a "position" holder.		if (myhand.big.value < myhand.small.value)	{		tempc = myhand.big;	    myhand.big = myhand.small;		myhand.small = tempc;	} 		// The two cards, if incorrectly ordered, are swapped using the "tempc"	// card or temporary card as a way to switch the two without lossing	// the original card		return myhand;}// suited takes a given hand and examines the suits of the two cards of the// given hand. With the information of the suit, if they're suit is of equal// value (0, 1, 2, 3), the hand is marked as one that is suited. If the suits// of the two cards in the hand are not equal, the hand is marked as not suited.// This is indicated using a boolean named suited with 0 being a non-suited hand// and 1 being a suited hand.hand suited(hand &myhand){	if (myhand.big.suit == myhand.small.suit)	{		myhand.suited = 1;	}		// If the two cards in hand are of the same suit, suited equals 1. Thi	// boolean expression is set to equal 0 before this function is run on the	// given hand.		return myhand;	}