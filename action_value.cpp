// Library implementation of action_value.cpp#include "action_value.h"table action_value(table &mytable,					float &bet,					float &call,					int &rank,					float &delta_bet_loose,					float &delta_bet_passive,					float &delta_bet_rank,					float &delta_call_loose,					float &delta_call_passive,					float &delta_call_rank){	float random, fold_percent, bet_percent, call_percent;		random = (rand() / RAND_MAX);		if (mytable.player[currentplayer].rank.value < rank)	{		mytable.player[currentplayer].action = "f";		return mytable;	}	else	{		if (mytable.betsinround <= 3)		{				bet_percent = (bet + (((mytable.player[(mytable.lastraiser)].loose * 2) - 1) * delta_bet_loose)							+ (((mytable.player[(mytable.lastraiser)].passive * 2) - 1) * delta_bet_passive)							+ (((rank - mytable.player[(mytable.computer)].rank.value) / (rank - 1)) * delta_bet_rank));						call_percent = (call + (((mytable.player[(mytable.lastraiser)].loose * 2) - 1) * delta_call_loose)							+ (((mytable.player[(mytable.lastraiser)].passive * 2) - 1) * delta_call_passive)							+ (((rank - mytable.player[(mytable.computer)].rank.value) / (rank - 1)) * delta_call_rank));				fold_percent = (1 - (bet_percent + call_percent));					if (random <= bet_percent)			{				mytable.player[(mytable.computer)].action = "b";				return mytable;			}			if (random <= (bet_percent + call_percent))			{				mytable.player[(mytable.computer)].action = "c";				return mytable;			}			else			{				mytable.player[(mytable.computer)].action = "f";				return mytable;			}		}		else		{			call_percent = (call + (((mytable.player[(mytable.lastraiser)].loose * 2) - 1) * delta_call_loose)							+ (((mytable.player[(mytable.lastraiser)].passive * 2) - 1) * delta_call_passive)							+ (((rank - mytable.player[(mytable.computer)].rank.value) / (rank - 1)) * delta_call_rank));			fold_percent = (1 - call_percent);						if (random <= call_percent)			{				mytable.player[(mytable.computer)].action = "c";				return mytable;			}			else			{				mytable.player[(mytable.computer)].action = "f";				return mytable;			}		}	}}